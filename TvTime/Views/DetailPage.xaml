<Page x:Class="TvTime.Views.DetailPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
      xmlns:labs="using:CommunityToolkit.Labs.WinUI"
      xmlns:local="using:TvTime.Common"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:model="using:TvTime.Models"
      xmlns:wuc="using:WinUICommunity"
      Name="rootPage"
      x:DefaultBindMode="OneWay"
      mc:Ignorable="d">
    <Page.Resources>
        <MenuFlyout x:Key="menuFlyout">
            <MenuFlyoutItem Name="menuDirectory"
                            Command="{x:Bind ViewModel.OpenDirectoryCommand}"
                            CommandParameter="{Binding ElementName=menuDirectory}"
                            Tag="{x:Bind}"
                            Text="Open Web Directory">
                <MenuFlyoutItem.Icon>
                    <ImageIcon Source="ms-appx:///Assets/Fluent/explorer.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutItem Name="menuFile"
                            Command="{x:Bind ViewModel.OpenDirectoryCommand}"
                            CommandParameter="{Binding ElementName=menuFile}"
                            Tag="{x:Bind}"
                            Text="Open File">
                <MenuFlyoutItem.Icon>
                    <ImageIcon Source="ms-appx:///Assets/Fluent/external.png" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
            <MenuFlyoutSubItem Tag="{x:Bind}" Text="Copy Link(s)">
                <MenuFlyoutSubItem.Icon>
                    <ImageIcon Source="ms-appx:///Assets/Fluent/copy.png" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutItem Name="menuCopy"
                                Command="{x:Bind ViewModel.CopyCommand}"
                                CommandParameter="{Binding ElementName=menuCopy}"
                                Tag="{x:Bind}"
                                Text="Copy Selected Item Link">
                    <MenuFlyoutItem.Icon>
                        <ImageIcon Source="ms-appx:///Assets/Fluent/copy.png" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Command="{x:Bind ViewModel.CopyAllCommand}"
                                Tag="{x:Bind}"
                                Text="Copy All Links">
                    <MenuFlyoutItem.Icon>
                        <ImageIcon Source="ms-appx:///Assets/Fluent/copy.png" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyoutSubItem>
            <MenuFlyoutSubItem Tag="{x:Bind}" Text="Download With IDM">
                <MenuFlyoutSubItem.Icon>
                    <ImageIcon Source="ms-appx:///Assets/Fluent/download.png" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutItem Name="menuDownload"
                                Command="{x:Bind ViewModel.DownloadCommand}"
                                CommandParameter="{Binding ElementName=menuDownload}"
                                Tag="{x:Bind}"
                                Text="Download Selected Item With IDM">
                    <MenuFlyoutItem.Icon>
                        <ImageIcon Source="ms-appx:///Assets/Fluent/download.png" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Command="{x:Bind ViewModel.DownloadAllCommand}"
                                Tag="{x:Bind}"
                                Text="Download All Items With IDM">
                    <MenuFlyoutItem.Icon>
                        <ImageIcon Source="ms-appx:///Assets/Fluent/download.png" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyoutSubItem>
        </MenuFlyout>

        <DataTemplate x:Key="TextBlockTemplate" x:DataType="model:LocalItem">
            <wuc:SettingsCard Name="settingsCard"
                              ActionIcon="{x:Bind Server, Converter={StaticResource FileExtension2IconConverter}}"
                              Command="{Binding ElementName=rootPage, Path=DataContext.ViewModel.SettingsCardCommand}"
                              CommandParameter="{Binding ElementName=settingsCard}"
                              ContextFlyout="{StaticResource menuFlyout}"
                              Description="{x:Bind Server}"
                              HeaderIcon="{x:Bind Title, Converter={StaticResource String2BitmapIconConverter}}"
                              IsClickEnabled="True">
                <wuc:SettingsCard.Header>
                    <TextBlock FontWeight="Normal"
                               Style="{ThemeResource SubtitleTextBlockStyle}"
                               Text="{x:Bind Title}" />
                </wuc:SettingsCard.Header>
                <Border Margin="5,0"
                        Background="{ThemeResource CardBackgroundFillColorDefault}"
                        CornerRadius="{ThemeResource ControlCornerRadius}">
                    <TextBlock Margin="5,0,5,2" Style="{ThemeResource BaseTextBlockStyle}">
                        <Run Text="{x:Bind DateTime}" />
                        <Run Text="{x:Bind FileSize, Converter={StaticResource String2FileSizeConverter}}" />
                    </TextBlock>
                </Border>
            </wuc:SettingsCard>
        </DataTemplate>

        <DataTemplate x:Key="HyperLinkTemplate" x:DataType="model:LocalItem">
            <wuc:SettingsCard Name="settingsCard"
                              ActionIcon="{x:Bind Server, Converter={StaticResource FileExtension2IconConverter}}"
                              Command="{Binding ElementName=rootPage, Path=DataContext.ViewModel.SettingsCardCommand}"
                              CommandParameter="{Binding ElementName=settingsCard}"
                              ContextFlyout="{StaticResource menuFlyout}"
                              HeaderIcon="{x:Bind Title, Converter={StaticResource String2BitmapIconConverter}}"
                              IsClickEnabled="True">
                <wuc:SettingsCard.Header>
                    <TextBlock FontWeight="Normal"
                               Style="{ThemeResource SubtitleTextBlockStyle}"
                               Text="{x:Bind Title}" />
                </wuc:SettingsCard.Header>
                <wuc:SettingsCard.Description>
                    <HyperlinkButton Margin="0,5,0,0"
                                     Padding="2,1,2,1"
                                     NavigateUri="{x:Bind Server}">
                        <HyperlinkButton.Content>
                            <TextBlock FontSize="12"
                                       Style="{ThemeResource BaseTextBlockStyle}"
                                       Text="{x:Bind Server}"
                                       TextWrapping="Wrap" />
                        </HyperlinkButton.Content>
                    </HyperlinkButton>
                </wuc:SettingsCard.Description>
                <Border Margin="5,0"
                        Background="{ThemeResource CardBackgroundFillColorDefault}"
                        CornerRadius="{ThemeResource ControlCornerRadius}">
                    <TextBlock Margin="5,0,5,2" Style="{ThemeResource BaseTextBlockStyle}">
                        <Run Text="{x:Bind DateTime}" />
                        <Run Text="{x:Bind FileSize, Converter={StaticResource String2FileSizeConverter}}" />
                    </TextBlock>
                </Border>
            </wuc:SettingsCard>
        </DataTemplate>

        <local:ListViewItemTemplateSelector x:Key="ListViewItemTemplateSelector"
                                            HyperLinkTemplate="{StaticResource HyperLinkTemplate}"
                                            TextBlockTemplate="{StaticResource TextBlockTemplate}" />
    </Page.Resources>
    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:EventTriggerBehavior.Actions>
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.PageLoadedCommand}" />
            </ic:EventTriggerBehavior.Actions>
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    <Grid ChildrenTransitions="{StaticResource SettingsCardsAnimations}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <labs:Segmented Name="segmented" Margin="10,10,0,0">
            <labs:SegmentedItem Content="Refresh"
                                Icon="{wuc:SymbolIcon Symbol=Refresh}"
                                IsEnabled="{x:Bind ViewModel.IsRefreshEnabled, Mode=OneWay}"
                                Tag="Refresh" />
            <labs:SegmentedItem Content="Details"
                                Icon="{wuc:SymbolIcon Symbol=PostUpdate}"
                                Tag="Details" />
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="SelectionChanged">
                    <ic:EventTriggerBehavior.Actions>
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.SegmentedItemChangedCommand}" CommandParameter="{Binding ElementName=segmented}" />
                    </ic:EventTriggerBehavior.Actions>
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </labs:Segmented>
        <BreadcrumbBar Name="breadcrumbBar"
                       Grid.Row="1"
                       Margin="10,5,5,5"
                       ItemsSource="{x:Bind ViewModel.BreadcrumbBarList, Mode=OneWay}">
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="ItemClicked">
                    <ic:EventTriggerBehavior.Actions>
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.BreadCrumbBarItemCommand}" />
                    </ic:EventTriggerBehavior.Actions>
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <BreadcrumbBar.ItemTemplate>
                <DataTemplate x:DataType="model:LocalItem">
                    <TextBlock FontWeight="ExtraLight"
                               Style="{ThemeResource TitleTextBlockStyle}"
                               Text="{x:Bind Title}" />
                </DataTemplate>
            </BreadcrumbBar.ItemTemplate>
        </BreadcrumbBar>
        <ListView Name="listView"
                  Grid.Row="2"
                  Margin="5,0,5,5"
                  HorizontalAlignment="Stretch"
                  ItemTemplateSelector="{StaticResource ListViewItemTemplateSelector}"
                  ItemsSource="{x:Bind ViewModel.DataListACV, Mode=OneWay}"
                  SelectionMode="None" />
        <ProgressRing Grid.Row="2" IsActive="{x:Bind ViewModel.IsActive}" />
        <InfoBar Title="{x:Bind ViewModel.StatusTitle}"
                 Grid.Row="3"
                 CornerRadius="4,4,0,0"
                 IsOpen="{x:Bind ViewModel.IsStatusOpen, Mode=OneWay}"
                 Message="{x:Bind ViewModel.StatusMessage, Mode=OneWay}"
                 Severity="{x:Bind ViewModel.StatusSeverity, Mode=OneWay}" />
    </Grid>
</Page>
