<?xml version="1.0" encoding="utf-8" ?>
<Page x:Class="TvTime.Views.DescriptionStyleSettingPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:settings="using:TvTime.Common"
      xmlns:views="using:TvTime.Views"
      xmlns:wuc="using:WinUICommunity"
      mc:Ignorable="d">

    <ScrollViewer>
        <StackPanel Margin="10"
                    ChildrenTransitions="{StaticResource SettingsCardsAnimations}"
                    Spacing="5">

            <views:BreadcrumbBarUserControl Items="{x:Bind GeneralViewModel.BreadCrumbBarCollection, Mode=OneWay}" />

            <wuc:SettingsCard Description="Specify the style of the description"
                              Header="Description Text Style"
                              HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/style.png}">
                <ComboBox Name="cmbDescription"
                          ItemsSource="{x:Bind ViewModel.TextBlockStyles, Mode=OneWay}"
                          SelectedItem="{x:Bind ViewModel.CmbSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:EventTriggerBehavior.Actions>
                                <ic:InvokeCommandAction Command="{x:Bind ViewModel.ComboBoxStyleChangedCommand}" />
                            </ic:EventTriggerBehavior.Actions>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>
            </wuc:SettingsCard>
            <wuc:SettingsCard Description="Append an ellipsis (...) at the end"
                              Header="Truncate Text"
                              HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/external.png}">
                <ToggleSwitch IsOn="{x:Bind settings:TvTimeHelper.Settings.UseTruncateInDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </wuc:SettingsCard>
            <wuc:SettingsExpander Description="Use Style Default Font Size"
                                  Header="Description Text Font Size"
                                  HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/fontsize.png}"
                                  IsExpanded="True">
                <ToggleSwitch Name="tgCustomFontSize"
                              IsOn="{x:Bind settings:TvTimeHelper.Settings.UseDescriptionCustomFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              OffContent="Default"
                              OnContent="Custom">
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="Toggled">
                            <ic:EventTriggerBehavior.Actions>
                                <ic:InvokeCommandAction Command="{x:Bind ViewModel.CustomFontSizeToggledCommand}" CommandParameter="{Binding ElementName=tgCustomFontSize}" />
                            </ic:EventTriggerBehavior.Actions>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ToggleSwitch>
                <wuc:SettingsExpander.Items>
                    <wuc:SettingsCard Description="Specify the font size of the description"
                                      Header="Description Text Font Size"
                                      HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/fontsize.png}"
                                      IsEnabled="{x:Bind ViewModel.IsEnabledSettingsCard, Mode=OneWay}">
                        <NumberBox Minimum="8"
                                   SpinButtonPlacementMode="Inline"
                                   ValueChanged="FontSize_ValueChanged"
                                   Value="{x:Bind settings:TvTimeHelper.Settings.SettingsCardDescriptionFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </wuc:SettingsCard>
                </wuc:SettingsExpander.Items>
            </wuc:SettingsExpander>

            <wuc:SettingsCard x:Name="settingCardDescType"
                              Description="Choose which control to use to display the description in the listview"
                              Header="Description Type"
                              HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/widgets.png}">
                <ComboBox Name="cmbDescriptionType">
                    <ComboBoxItem Content="TextBlock" Tag="TextBlock" />
                    <ComboBoxItem Content="HyperLink" Tag="HyperLink" />
                    <i:Interaction.Behaviors>
                        <ic:EventTriggerBehavior EventName="SelectionChanged">
                            <ic:EventTriggerBehavior.Actions>
                                <ic:InvokeCommandAction Command="{x:Bind ViewModel.ComboBoxTypeChangedCommand}" CommandParameter="{Binding ElementName=cmbDescriptionType}" />
                            </ic:EventTriggerBehavior.Actions>
                        </ic:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ComboBox>
            </wuc:SettingsCard>
            <wuc:SettingsCard Description="Specify the borderThickness of the hyperlink"
                              Header="HyperLink BorderThickness"
                              HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/border.png}">
                <ToggleSwitch Name="tgHyperLinkBorderThickness"
                              IsEnabled="False"
                              IsOn="{x:Bind settings:TvTimeHelper.Settings.HasHyperLinkBorderThickness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Behaviors>
                        <ic:DataTriggerBehavior Binding="{Binding SelectedIndex, ElementName=cmbDescriptionType}"
                                                ComparisonCondition="Equal"
                                                Value="1">
                            <ic:ChangePropertyAction PropertyName="IsEnabled"
                                                     TargetObject="{Binding ElementName=tgHyperLinkBorderThickness}"
                                                     Value="True" />
                        </ic:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </ToggleSwitch>
            </wuc:SettingsCard>

            <TextBlock Margin="10"
                       HorizontalAlignment="Center"
                       FontSize="{x:Bind ViewModel.PreviewFontSize, Mode=OneWay}"
                       Style="{Binding ElementName=cmbDescription, Path=SelectedItem, Converter={StaticResource String2StyleConverter}}"
                       Text="Preview Description"
                       Visibility="{x:Bind ViewModel.IsTextBlock, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
            <HyperlinkButton Name="serverHyperLink"
                             Padding="5"
                             HorizontalAlignment="Center"
                             Visibility="{x:Bind ViewModel.IsHyperLink, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                <HyperlinkButton.Content>
                    <TextBlock FontSize="{x:Bind ViewModel.PreviewFontSize, Mode=OneWay}"
                               Style="{Binding ElementName=cmbDescription, Path=SelectedItem, Converter={StaticResource String2StyleConverter}}"
                               Text="Preview Description"
                               TextWrapping="Wrap" />
                </HyperlinkButton.Content>
                <i:Interaction.Behaviors>
                    <ic:DataTriggerBehavior Binding="{x:Bind tgHyperLinkBorderThickness.IsOn, Mode=OneWay}"
                                            ComparisonCondition="Equal"
                                            Value="True">
                        <ic:ChangePropertyAction PropertyName="BorderThickness"
                                                 TargetObject="{Binding ElementName=serverHyperLink}"
                                                 Value="1" />
                    </ic:DataTriggerBehavior>
                    <ic:DataTriggerBehavior Binding="{x:Bind tgHyperLinkBorderThickness.IsOn, Mode=OneWay}"
                                            ComparisonCondition="Equal"
                                            Value="False">
                        <ic:ChangePropertyAction PropertyName="BorderThickness"
                                                 TargetObject="{Binding ElementName=serverHyperLink}"
                                                 Value="0" />
                    </ic:DataTriggerBehavior>

                </i:Interaction.Behaviors>
            </HyperlinkButton>
        </StackPanel>
    </ScrollViewer>
</Page>
