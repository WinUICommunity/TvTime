<UserControl x:Class="TvTime.Views.MediaUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="using:Microsoft.Xaml.Interactivity"
             xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
             xmlns:labs="using:CommunityToolkit.Labs.WinUI"
             xmlns:local="using:TvTime.Common"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:model="using:TvTime.Models"
             xmlns:views="using:TvTime.Views"
             xmlns:wuc="using:WinUICommunity"
             Name="rootView"
             x:DefaultBindMode="OneWay"
             mc:Ignorable="d">

    <UserControl.Resources>

        <DataTemplate x:Key="TextBlockTemplate" x:DataType="model:LocalItem">

            <views:LocalSettingsCardUserControl Description="{x:Bind Server}"
                                                LocalItem="{x:Bind}"
                                                PageType="{Binding ElementName=rootView, Path=DataContext.PageType}" />

        </DataTemplate>

        <DataTemplate x:Key="HyperLinkTemplate" x:DataType="model:LocalItem">
            <views:LocalSettingsCardUserControl LocalItem="{x:Bind}" PageType="{Binding ElementName=rootView, Path=DataContext.PageType}">
                <views:LocalSettingsCardUserControl.Description>
                    <HyperlinkButton Name="serverHyperLink"
                                     Margin="0,5,0,0"
                                     Padding="2,1,2,1"
                                     NavigateUri="{x:Bind Server}">
                        <HyperlinkButton.Content>
                            <TextBlock FontSize="{x:Bind local:TvTimeHelper.Settings.SettingsCardDescriptionFontSize}"
                                       Style="{x:Bind local:TvTimeHelper.Settings.SettingsCardDescriptionStyle, Converter={StaticResource String2StyleConverter}}"
                                       Text="{x:Bind Server}"
                                       TextWrapping="Wrap" />
                        </HyperlinkButton.Content>
                        <i:Interaction.Behaviors>
                            <ic:DataTriggerBehavior Binding="{x:Bind local:TvTimeHelper.Settings.HasHyperLinkBorderThickness}" Value="True">
                                <ic:ChangePropertyAction PropertyName="BorderThickness"
                                                         TargetObject="{Binding ElementName=serverHyperLink}"
                                                         Value="1" />
                            </ic:DataTriggerBehavior>
                            <ic:DataTriggerBehavior Binding="{x:Bind local:TvTimeHelper.Settings.HasHyperLinkBorderThickness}" Value="False">
                                <ic:ChangePropertyAction PropertyName="BorderThickness"
                                                         TargetObject="{Binding ElementName=serverHyperLink}"
                                                         Value="0" />
                            </ic:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </HyperlinkButton>
                </views:LocalSettingsCardUserControl.Description>
            </views:LocalSettingsCardUserControl>
        </DataTemplate>

        <local:ListViewItemTemplateSelector x:Key="ListViewItemTemplateSelector"
                                            HyperLinkTemplate="{StaticResource HyperLinkTemplate}"
                                            TextBlockTemplate="{StaticResource TextBlockTemplate}" />
    </UserControl.Resources>

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:EventTriggerBehavior.Actions>
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.PageLoadedCommand}" />
            </ic:EventTriggerBehavior.Actions>
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Grid ChildrenTransitions="{StaticResource SettingsCardsAnimations}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <labs:Segmented Name="segmented" Margin="10,10,0,0">
            <labs:SegmentedItem Name="segRefresh"
                                Content="Refresh"
                                Icon="{wuc:SymbolIcon Symbol=Refresh}"
                                IsEnabled="{x:Bind ViewModel.IsActive, Converter={StaticResource BoolNegationConverter}}"
                                Tag="Refresh" />
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="SelectionChanged">
                    <ic:EventTriggerBehavior.Actions>
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.SegmentedItemChangedCommand}" CommandParameter="{Binding ElementName=segmented}" />
                    </ic:EventTriggerBehavior.Actions>
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
        </labs:Segmented>
        <ListView Grid.Row="1"
                  Margin="5,10,5,5"
                  HorizontalAlignment="Stretch"
                  IsEnabled="{x:Bind ViewModel.IsActive, Converter={StaticResource BoolNegationConverter}}"
                  ItemTemplateSelector="{StaticResource ListViewItemTemplateSelector}"
                  ItemsSource="{x:Bind ViewModel.DataListACV}"
                  SelectionMode="None" />
        <ProgressRing Grid.Row="1" IsActive="{x:Bind ViewModel.IsActive}" />
        <InfoBar Title="{x:Bind ViewModel.StatusTitle}"
                 Grid.Row="2"
                 BorderThickness="0"
                 CornerRadius="0"
                 IsOpen="{x:Bind ViewModel.IsStatusOpen}"
                 Message="{x:Bind ViewModel.StatusMessage}"
                 Severity="{x:Bind ViewModel.StatusSeverity}">
            <InfoBar.ActionButton>
                <HyperlinkButton HorizontalContentAlignment="Stretch"
                                 VerticalContentAlignment="Stretch"
                                 Command="{x:Bind ViewModel.ServerStatusCommand}"
                                 Visibility="{x:Bind ViewModel.IsServerStatusOpen, Converter={StaticResource BoolToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <SymbolIcon Symbol="Admin" />
                        <TextBlock Margin="5,0,0,0" Text="Server Status" />
                        <InfoBadge HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Value="{x:Bind ViewModel.InfoBadgeValue}" />
                    </StackPanel>
                </HyperlinkButton>
            </InfoBar.ActionButton>
        </InfoBar>
    </Grid>
</UserControl>
