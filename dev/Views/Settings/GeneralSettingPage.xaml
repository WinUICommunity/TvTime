<?xml version="1.0" encoding="utf-8" ?>
<Page x:Class="TvTime.Views.GeneralSettingPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
      xmlns:local="using:TvTime.Common"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:views="using:TvTime.Views"
      xmlns:wuc="using:WinUICommunity"
      mc:Ignorable="d">

    <ScrollView>
        <StackPanel Margin="10"
                    ChildrenTransitions="{StaticResource SettingsCardsAnimations}"
                    Spacing="10">

            <views:BreadcrumbBarUserControl SingleItem="{x:Bind BreadCrumbBarItemText, Mode=OneWay}" />
            <wuc:SettingsGroup Description="You can open the file in your browser, download it with IDM (Internet Download Manager), or use double click to navigate through the folders."
                               Header="File Operation">
                <wuc:SettingsGroup.Items>
                    <wuc:SettingsCard Description="If false is selected, the corresponding web page will be opened instead of the file itself"
                                      Header="Open the file in the browser"
                                      HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/external.png}">
                        <ToggleSwitch x:Name="TGOpenFile"
                                      IsOn="{x:Bind local:AppHelper.Settings.IsFileOpenInBrowser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Behaviors>
                                <ic:DataTriggerBehavior Binding="{Binding IsOn, ElementName=TGOpenFile}"
                                                        ComparisonCondition="Equal"
                                                        Value="True">
                                    <ic:ChangePropertyAction PropertyName="IsOn"
                                                             TargetObject="{Binding ElementName=TGUseIDM}"
                                                             Value="False" />
                                </ic:DataTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </ToggleSwitch>
                    </wuc:SettingsCard>
                    <wuc:SettingsCard Description="Download Files With Internet Download Manager (IDM) [if exist]"
                                      Header="Download with IDM"
                                      HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/idm.png}">
                        <ToggleSwitch x:Name="TGUseIDM"
                                      IsOn="{x:Bind local:AppHelper.Settings.UseIDMForDownloadFiles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Behaviors>
                                <ic:DataTriggerBehavior Binding="{Binding IsOn, ElementName=TGUseIDM}"
                                                        ComparisonCondition="Equal"
                                                        Value="True">
                                    <ic:ChangePropertyAction PropertyName="IsOn"
                                                             TargetObject="{Binding ElementName=TGOpenFile}"
                                                             Value="False" />
                                </ic:DataTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </ToggleSwitch>
                    </wuc:SettingsCard>
                    <wuc:SettingsCard Description="Navigate to pages with Mouse Double Click"
                                      Header="Use Double Click for Navigate"
                                      HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/mouse.png}">
                        <ToggleSwitch IsOn="{x:Bind local:AppHelper.Settings.UseDoubleClickForNavigate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </wuc:SettingsCard>
                </wuc:SettingsGroup.Items>
            </wuc:SettingsGroup>
            <wuc:SettingsGroup Description="Customize how you view the media files on your screen. You can also change the navigationview display mode."
                               Header="View Options">
                <wuc:SettingsGroup.Items>
                    <wuc:SettingsCard Description="Choose how and where the NavigationView pane is shown"
                                      Header="NavigationView Display Mode"
                                      HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/displayMode.png}">
                        <ComboBox xmlns:enums="using:Microsoft.UI.Xaml.Controls"
                                  xmlns:ui="using:CommunityToolkit.WinUI"
                                  ItemsSource="{ui:EnumValues Type=enums:NavigationViewPaneDisplayMode}"
                                  SelectedItem="{x:Bind local:AppHelper.Settings.NavigationViewPaneDisplayMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="SelectionChanged">
                                    <ic:EventTriggerBehavior.Actions>
                                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.NavigationViewPaneDisplayModeChangedCommand}" />
                                    </ic:EventTriggerBehavior.Actions>
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </ComboBox>
                    </wuc:SettingsCard>
                </wuc:SettingsGroup.Items>
            </wuc:SettingsGroup>
            <wuc:SettingsGroup Header="Miscellaneous">
                <wuc:SettingsGroup.Items>
                    <wuc:SettingsExpander Description="By activating this option, if an error or crash occurs, its information will be saved in a file called Log{YYYYMMDD}.txt"
                                          Header="Developer Mode (Restart Required)"
                                          HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/devMode.png}">
                        <ToggleSwitch IsOn="{x:Bind local:AppHelper.Settings.UseDeveloperMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <wuc:SettingsExpander.ItemsHeader>
                            <HyperlinkButton HorizontalAlignment="Stretch"
                                             HorizontalContentAlignment="Left"
                                             Click="NavigateToLogPath_Click"
                                             Content="{x:Bind local:Constants.LogDirectoryPath}" />
                        </wuc:SettingsExpander.ItemsHeader>
                    </wuc:SettingsExpander>
                    <wuc:SettingsExpander Description="following keywords will be removed from movie\series file name, if you see a word that can not be removed from file name you can add your keywords here"
                                          Header="Use Default Regex"
                                          HeaderIcon="{wuc:BitmapIcon Source=Assets/Fluent/regex.png}">
                        <ToggleSwitch x:Name="TGRegex"
                                      IsOn="{x:Bind local:AppHelper.Settings.UseDefaultRegexEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      Toggled="TGRegex_Toggled" />
                        <wuc:SettingsExpander.ItemsHeader>
                            <TextBox MinWidth="240"
                                     MinHeight="160"
                                     AcceptsReturn="True"
                                     IsEnabled="{Binding ElementName=TGRegex, Path=IsOn, Converter={StaticResource BoolNegationConverter}}"
                                     PlaceholderText="Regex"
                                     ScrollViewer.IsVerticalRailEnabled="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     ScrollViewer.VerticalScrollMode="Enabled"
                                     Text="{x:Bind local:AppHelper.Settings.FileNameRegex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     TextWrapping="Wrap" />
                        </wuc:SettingsExpander.ItemsHeader>
                    </wuc:SettingsExpander>
                </wuc:SettingsGroup.Items>
            </wuc:SettingsGroup>



        </StackPanel>
    </ScrollView>
</Page>
